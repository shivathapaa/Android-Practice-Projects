package theme.color_palettes

import androidx.compose.ui.graphics.Color
import theme.MaterialThemeColorsPalette

object OrangeColorBase : MaterialThemeColorsPalette {
    override val primaryLight:Color = Color(0xFF914C00)
    override val onPrimaryLight:Color = Color(0xFFFFFFFF)
    override val primaryContainerLight:Color = Color(0xFFFD8C15)
    override val onPrimaryContainerLight:Color = Color(0xFF331700)
    override val secondaryLight:Color = Color(0xFF855328)
    override val onSecondaryLight:Color = Color(0xFFFFFFFF)
    override val secondaryContainerLight:Color = Color(0xFFFFC498)
    override val onSecondaryContainerLight:Color = Color(0xFF5D3209)
    override val tertiaryLight:Color = Color(0xFF5B6400)
    override val onTertiaryLight:Color = Color(0xFFFFFFFF)
    override val tertiaryContainerLight:Color = Color(0xFFA4B217)
    override val onTertiaryContainerLight:Color = Color(0xFF1D2100)
    override val errorLight:Color = Color(0xFFBA1A1A)
    override val onErrorLight:Color = Color(0xFFFFFFFF)
    override val errorContainerLight:Color = Color(0xFFFFDAD6)
    override val onErrorContainerLight:Color = Color(0xFF410002)
    override val backgroundLight:Color = Color(0xFFFFF8F5)
    override val onBackgroundLight:Color = Color(0xFF241912)
    override val surfaceLight:Color = Color(0xFFFFF8F5)
    override val onSurfaceLight:Color = Color(0xFF241912)
    override val surfaceVariantLight:Color = Color(0xFFFADDCA)
    override val onSurfaceVariantLight:Color = Color(0xFF564335)
    override val outlineLight:Color = Color(0xFF897363)
    override val outlineVariantLight:Color = Color(0xFFDDC1AF)
    override val scrimLight:Color = Color(0xFF000000)
    override val inverseSurfaceLight:Color = Color(0xFF3A2E26)
    override val inverseOnSurfaceLight:Color = Color(0xFFFFEDE3)
    override val inversePrimaryLight:Color = Color(0xFFFFB77F)
    override val surfaceDimLight:Color = Color(0xFFEAD6CA)
    override val surfaceBrightLight:Color = Color(0xFFFFF8F5)
    override val surfaceContainerLowestLight:Color = Color(0xFFFFFFFF)
    override val surfaceContainerLowLight:Color = Color(0xFFFFF1E9)
    override val surfaceContainerLight:Color = Color(0xFFFFEADD)
    override val surfaceContainerHighLight:Color = Color(0xFFF9E4D8)
    override val surfaceContainerHighestLight:Color = Color(0xFFF3DFD2)

    override val primaryDark:Color = Color(0xFFFFB77F)
    override val onPrimaryDark:Color = Color(0xFF4E2600)
    override val primaryContainerDark:Color = Color(0xFFE47B00)
    override val onPrimaryContainerDark:Color = Color(0xFF030100)
    override val secondaryDark:Color = Color(0xFFFBB885)
    override val onSecondaryDark:Color = Color(0xFF4E2600)
    override val secondaryContainerDark:Color = Color(0xFF61350D)
    override val onSecondaryContainerDark:Color = Color(0xFFFFCBA4)
    override val tertiaryDark:Color = Color(0xFFC1D039)
    override val onTertiaryDark:Color = Color(0xFF2E3300)
    override val tertiaryContainerDark:Color = Color(0xFF909D00)
    override val onTertiaryContainerDark:Color = Color(0xFF000000)
    override val errorDark:Color = Color(0xFFFFB4AB)
    override val onErrorDark:Color = Color(0xFF690005)
    override val errorContainerDark:Color = Color(0xFF93000A)
    override val onErrorContainerDark:Color = Color(0xFFFFDAD6)
    override val backgroundDark:Color = Color(0xFF1B110A)
    override val onBackgroundDark:Color = Color(0xFFF3DFD2)
    override val surfaceDark:Color = Color(0xFF1B110A)
    override val onSurfaceDark:Color = Color(0xFFF3DFD2)
    override val surfaceVariantDark:Color = Color(0xFF564335)
    override val onSurfaceVariantDark:Color = Color(0xFFDDC1AF)
    override val outlineDark:Color = Color(0xFFA48C7B)
    override val outlineVariantDark:Color = Color(0xFF564335)
    override val scrimDark:Color = Color(0xFF000000)
    override val inverseSurfaceDark:Color = Color(0xFFF3DFD2)
    override val inverseOnSurfaceDark:Color = Color(0xFF3A2E26)
    override val inversePrimaryDark:Color = Color(0xFF914C00)
    override val surfaceDimDark:Color = Color(0xFF1B110A)
    override val surfaceBrightDark:Color = Color(0xFF43372E)
    override val surfaceContainerLowestDark:Color = Color(0xFF150C06)
    override val surfaceContainerLowDark:Color = Color(0xFF241912)
    override val surfaceContainerDark:Color = Color(0xFF281D16)
    override val surfaceContainerHighDark:Color = Color(0xFF332820)
    override val surfaceContainerHighestDark:Color = Color(0xFF3E322A)
}