package theme.color_palettes

import androidx.compose.ui.graphics.Color
import theme.MaterialThemeColorsPalette

object YellowColorBase : MaterialThemeColorsPalette {
    override val primaryLight : Color = Color(0xFF6D5E0F)
    override val onPrimaryLight : Color = Color(0xFFFFFFFF)
    override val primaryContainerLight : Color = Color(0xFFF8E287)
    override val onPrimaryContainerLight : Color = Color(0xFF221B00)
    override val secondaryLight : Color = Color(0xFF665E40)
    override val onSecondaryLight : Color = Color(0xFFFFFFFF)
    override val secondaryContainerLight : Color = Color(0xFFEEE2BC)
    override val onSecondaryContainerLight : Color = Color(0xFF211B04)
    override val tertiaryLight : Color = Color(0xFF43664E)
    override val onTertiaryLight : Color = Color(0xFFFFFFFF)
    override val tertiaryContainerLight : Color = Color(0xFFC5ECCE)
    override val onTertiaryContainerLight : Color = Color(0xFF00210F)
    override val errorLight : Color = Color(0xFFBA1A1A)
    override val onErrorLight : Color = Color(0xFFFFFFFF)
    override val errorContainerLight : Color = Color(0xFFFFDAD6)
    override val onErrorContainerLight : Color = Color(0xFF410002)
    override val backgroundLight : Color = Color(0xFFFFF9EE)
    override val onBackgroundLight : Color = Color(0xFF1E1B13)
    override val surfaceLight : Color = Color(0xFFFFF9EE)
    override val onSurfaceLight : Color = Color(0xFF1E1B13)
    override val surfaceVariantLight : Color = Color(0xFFEAE2D0)
    override val onSurfaceVariantLight : Color = Color(0xFF4B4739)
    override val outlineLight : Color = Color(0xFF7C7767)
    override val outlineVariantLight : Color = Color(0xFFCDC6B4)
    override val scrimLight : Color = Color(0xFF000000)
    override val inverseSurfaceLight : Color = Color(0xFF333027)
    override val inverseOnSurfaceLight : Color = Color(0xFFF7F0E2)
    override val inversePrimaryLight : Color = Color(0xFFDBC66E)
    override val surfaceDimLight : Color = Color(0xFFE0D9CC)
    override val surfaceBrightLight : Color = Color(0xFFFFF9EE)
    override val surfaceContainerLowestLight : Color = Color(0xFFFFFFFF)
    override val surfaceContainerLowLight : Color = Color(0xFFFAF3E5)
    override val surfaceContainerLight : Color = Color(0xFFF4EDDF)
    override val surfaceContainerHighLight : Color = Color(0xFFEEE8DA)
    override val surfaceContainerHighestLight : Color = Color(0xFFE8E2D4)

    override val primaryDark : Color = Color(0xFFDBC66E)
    override val onPrimaryDark : Color = Color(0xFF3A3000)
    override val primaryContainerDark : Color = Color(0xFF534600)
    override val onPrimaryContainerDark : Color = Color(0xFFF8E287)
    override val secondaryDark : Color = Color(0xFFD1C6A1)
    override val onSecondaryDark : Color = Color(0xFF363016)
    override val secondaryContainerDark : Color = Color(0xFF4E472A)
    override val onSecondaryContainerDark : Color = Color(0xFFEEE2BC)
    override val tertiaryDark : Color = Color(0xFFA9D0B3)
    override val onTertiaryDark : Color = Color(0xFF143723)
    override val tertiaryContainerDark : Color = Color(0xFF2C4E38)
    override val onTertiaryContainerDark : Color = Color(0xFFC5ECCE)
    override val errorDark : Color = Color(0xFFFFB4AB)
    override val onErrorDark : Color = Color(0xFF690005)
    override val errorContainerDark : Color = Color(0xFF93000A)
    override val onErrorContainerDark : Color = Color(0xFFFFDAD6)
    override val backgroundDark : Color = Color(0xFF15130B)
    override val onBackgroundDark : Color = Color(0xFFE8E2D4)
    override val surfaceDark : Color = Color(0xFF15130B)
    override val onSurfaceDark : Color = Color(0xFFE8E2D4)
    override val surfaceVariantDark : Color = Color(0xFF4B4739)
    override val onSurfaceVariantDark : Color = Color(0xFFCDC6B4)
    override val outlineDark : Color = Color(0xFF969080)
    override val outlineVariantDark : Color = Color(0xFF4B4739)
    override val scrimDark : Color = Color(0xFF000000)
    override val inverseSurfaceDark : Color = Color(0xFFE8E2D4)
    override val inverseOnSurfaceDark : Color = Color(0xFF333027)
    override val inversePrimaryDark : Color = Color(0xFF6D5E0F)
    override val surfaceDimDark : Color = Color(0xFF15130B)
    override val surfaceBrightDark : Color = Color(0xFF3C3930)
    override val surfaceContainerLowestDark : Color = Color(0xFF100E07)
    override val surfaceContainerLowDark : Color = Color(0xFF1E1B13)
    override val surfaceContainerDark : Color = Color(0xFF222017)
    override val surfaceContainerHighDark : Color = Color(0xFF2D2A21)
    override val surfaceContainerHighestDark : Color = Color(0xFF38352B)
}