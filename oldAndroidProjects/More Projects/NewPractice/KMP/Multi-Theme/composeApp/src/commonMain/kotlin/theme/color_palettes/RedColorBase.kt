package theme.color_palettes

import androidx.compose.ui.graphics.Color
import theme.MaterialThemeColorsPalette

object RedColorBase : MaterialThemeColorsPalette {
    override val primaryLight:Color = Color(0xFF701B00)
    override val onPrimaryLight:Color = Color(0xFFFFFFFF)
    override val primaryContainerLight:Color = Color(0xFFA8350F)
    override val onPrimaryContainerLight:Color = Color(0xFFFFFFFF)
    override val secondaryLight:Color = Color(0xFF8D4D3A)
    override val onSecondaryLight:Color = Color(0xFFFFFFFF)
    override val secondaryContainerLight:Color = Color(0xFFFFB49F)
    override val onSecondaryContainerLight:Color = Color(0xFF5B2616)
    override val tertiaryLight:Color = Color(0xFF705D12)
    override val onTertiaryLight:Color = Color(0xFFFFFFFF)
    override val tertiaryContainerLight:Color = Color(0xFFC2AA59)
    override val onTertiaryContainerLight:Color = Color(0xFF292000)
    override val errorLight:Color = Color(0xFFBA1A1A)
    override val onErrorLight:Color = Color(0xFFFFFFFF)
    override val errorContainerLight:Color = Color(0xFFFFDAD6)
    override val onErrorContainerLight:Color = Color(0xFF410002)
    override val backgroundLight:Color = Color(0xFFFFF8F6)
    override val onBackgroundLight:Color = Color(0xFF251915)
    override val surfaceLight:Color = Color(0xFFFFF8F6)
    override val onSurfaceLight:Color = Color(0xFF251915)
    override val surfaceVariantLight:Color = Color(0xFFFDDBD2)
    override val onSurfaceVariantLight:Color = Color(0xFF58413B)
    override val outlineLight:Color = Color(0xFF8C716A)
    override val outlineVariantLight:Color = Color(0xFFE0BFB7)
    override val scrimLight:Color = Color(0xFF000000)
    override val inverseSurfaceLight:Color = Color(0xFF3B2D29)
    override val inverseOnSurfaceLight:Color = Color(0xFFFFEDE8)
    override val inversePrimaryLight:Color = Color(0xFFFFB5A0)
    override val surfaceDimLight:Color = Color(0xFFECD5CF)
    override val surfaceBrightLight:Color = Color(0xFFFFF8F6)
    override val surfaceContainerLowestLight:Color = Color(0xFFFFFFFF)
    override val surfaceContainerLowLight:Color = Color(0xFFFFF1ED)
    override val surfaceContainerLight:Color = Color(0xFFFFE9E4)
    override val surfaceContainerHighLight:Color = Color(0xFFFBE3DD)
    override val surfaceContainerHighestLight:Color = Color(0xFFF5DDD7)

    override val primaryDark:Color = Color(0xFFFFB5A0)
    override val onPrimaryDark:Color = Color(0xFF5F1500)
    override val primaryContainerDark:Color = Color(0xFF832100)
    override val onPrimaryContainerDark:Color = Color(0xFFFFD3C7)
    override val secondaryDark:Color = Color(0xFFFFB5A0)
    override val onSecondaryDark:Color = Color(0xFF542111)
    override val secondaryContainerDark:Color = Color(0xFF672F1F)
    override val onSecondaryContainerDark:Color = Color(0xFFFFC8B9)
    override val tertiaryDark:Color = Color(0xFFEDD37D)
    override val onTertiaryDark:Color = Color(0xFF3B2F00)
    override val tertiaryContainerDark:Color = Color(0xFFC2AA59)
    override val onTertiaryContainerDark:Color = Color(0xFF292000)
    override val errorDark:Color = Color(0xFFFFB4AB)
    override val onErrorDark:Color = Color(0xFF690005)
    override val errorContainerDark:Color = Color(0xFF93000A)
    override val onErrorContainerDark:Color = Color(0xFFFFDAD6)
    override val backgroundDark:Color = Color(0xFF1C110D)
    override val onBackgroundDark:Color = Color(0xFFF5DDD7)
    override val surfaceDark:Color = Color(0xFF1C110D)
    override val onSurfaceDark:Color = Color(0xFFF5DDD7)
    override val surfaceVariantDark:Color = Color(0xFF58413B)
    override val onSurfaceVariantDark:Color = Color(0xFFE0BFB7)
    override val outlineDark:Color = Color(0xFFA78A82)
    override val outlineVariantDark:Color = Color(0xFF58413B)
    override val scrimDark:Color = Color(0xFF000000)
    override val inverseSurfaceDark:Color = Color(0xFFF5DDD7)
    override val inverseOnSurfaceDark:Color = Color(0xFF3B2D29)
    override val inversePrimaryDark:Color = Color(0xFFAA3611)
    override val surfaceDimDark:Color = Color(0xFF1C110D)
    override val surfaceBrightDark:Color = Color(0xFF453632)
    override val surfaceContainerLowestDark:Color = Color(0xFF160B08)
    override val surfaceContainerLowDark:Color = Color(0xFF251915)
    override val surfaceContainerDark:Color = Color(0xFF291D19)
    override val surfaceContainerHighDark:Color = Color(0xFF352723)
    override val surfaceContainerHighestDark:Color = Color(0xFF40312D)
}