package theme.color_palettes

import androidx.compose.ui.graphics.Color
import theme.MaterialThemeColorsPalette

object PinkColorBase : MaterialThemeColorsPalette {
    override val primaryLight:Color = Color(0xFF8F4C38)
    override val onPrimaryLight:Color = Color(0xFFFFFFFF)
    override val primaryContainerLight:Color = Color(0xFFFFDBD1)
    override val onPrimaryContainerLight:Color = Color(0xFF3A0B01)
    override val secondaryLight:Color = Color(0xFF77574E)
    override val onSecondaryLight:Color = Color(0xFFFFFFFF)
    override val secondaryContainerLight:Color = Color(0xFFFFDBD1)
    override val onSecondaryContainerLight:Color = Color(0xFF2C150F)
    override val tertiaryLight:Color = Color(0xFF6C5D2F)
    override val onTertiaryLight:Color = Color(0xFFFFFFFF)
    override val tertiaryContainerLight:Color = Color(0xFFF5E1A7)
    override val onTertiaryContainerLight:Color = Color(0xFF231B00)
    override val errorLight:Color = Color(0xFFBA1A1A)
    override val onErrorLight:Color = Color(0xFFFFFFFF)
    override val errorContainerLight:Color = Color(0xFFFFDAD6)
    override val onErrorContainerLight:Color = Color(0xFF410002)
    override val backgroundLight:Color = Color(0xFFFFF8F6)
    override val onBackgroundLight:Color = Color(0xFF231917)
    override val surfaceLight:Color = Color(0xFFFFF8F6)
    override val onSurfaceLight:Color = Color(0xFF231917)
    override val surfaceVariantLight:Color = Color(0xFFF5DED8)
    override val onSurfaceVariantLight:Color = Color(0xFF53433F)
    override val outlineLight:Color = Color(0xFF85736E)
    override val outlineVariantLight:Color = Color(0xFFD8C2BC)
    override val scrimLight:Color = Color(0xFF000000)
    override val inverseSurfaceLight:Color = Color(0xFF392E2B)
    override val inverseOnSurfaceLight:Color = Color(0xFFFFEDE8)
    override val inversePrimaryLight:Color = Color(0xFFFFB5A0)
    override val surfaceDimLight:Color = Color(0xFFE8D6D2)
    override val surfaceBrightLight:Color = Color(0xFFFFF8F6)
    override val surfaceContainerLowestLight:Color = Color(0xFFFFFFFF)
    override val surfaceContainerLowLight:Color = Color(0xFFFFF1ED)
    override val surfaceContainerLight:Color = Color(0xFFFCEAE5)
    override val surfaceContainerHighLight:Color = Color(0xFFF7E4E0)
    override val surfaceContainerHighestLight:Color = Color(0xFFF1DFDA)

    override val primaryDark:Color = Color(0xFFFFB5A0)
    override val onPrimaryDark:Color = Color(0xFF561F0F)
    override val primaryContainerDark:Color = Color(0xFF723523)
    override val onPrimaryContainerDark:Color = Color(0xFFFFDBD1)
    override val secondaryDark:Color = Color(0xFFE7BDB2)
    override val onSecondaryDark:Color = Color(0xFF442A22)
    override val secondaryContainerDark:Color = Color(0xFF5D4037)
    override val onSecondaryContainerDark:Color = Color(0xFFFFDBD1)
    override val tertiaryDark:Color = Color(0xFFD8C58D)
    override val onTertiaryDark:Color = Color(0xFF3B2F05)
    override val tertiaryContainerDark:Color = Color(0xFF534619)
    override val onTertiaryContainerDark:Color = Color(0xFFF5E1A7)
    override val errorDark:Color = Color(0xFFFFB4AB)
    override val onErrorDark:Color = Color(0xFF690005)
    override val errorContainerDark:Color = Color(0xFF93000A)
    override val onErrorContainerDark:Color = Color(0xFFFFDAD6)
    override val backgroundDark:Color = Color(0xFF1A110F)
    override val onBackgroundDark:Color = Color(0xFFF1DFDA)
    override val surfaceDark:Color = Color(0xFF1A110F)
    override val onSurfaceDark:Color = Color(0xFFF1DFDA)
    override val surfaceVariantDark:Color = Color(0xFF53433F)
    override val onSurfaceVariantDark:Color = Color(0xFFD8C2BC)
    override val outlineDark:Color = Color(0xFFA08C87)
    override val outlineVariantDark:Color = Color(0xFF53433F)
    override val scrimDark:Color = Color(0xFF000000)
    override val inverseSurfaceDark:Color = Color(0xFFF1DFDA)
    override val inverseOnSurfaceDark:Color = Color(0xFF392E2B)
    override val inversePrimaryDark:Color = Color(0xFF8F4C38)
    override val surfaceDimDark:Color = Color(0xFF1A110F)
    override val surfaceBrightDark:Color = Color(0xFF423734)
    override val surfaceContainerLowestDark:Color = Color(0xFF140C0A)
    override val surfaceContainerLowDark:Color = Color(0xFF231917)
    override val surfaceContainerDark:Color = Color(0xFF271D1B)
    override val surfaceContainerHighDark:Color = Color(0xFF322825)
    override val surfaceContainerHighestDark:Color = Color(0xFF3D322F)
}