package theme.color_palettes

import androidx.compose.ui.graphics.Color
import theme.MaterialThemeColorsPalette

object NeoGreenColorBase : MaterialThemeColorsPalette {
    override val primaryLight:Color = Color(0xFF006B58)
    override val onPrimaryLight:Color = Color(0xFFFFFFFF)
    override val primaryContainerLight:Color = Color(0xFF24DAB6)
    override val onPrimaryContainerLight:Color = Color(0xFF003B2F)
    override val secondaryLight:Color = Color(0xFF32685A)
    override val onSecondaryLight:Color = Color(0xFFFFFFFF)
    override val secondaryContainerLight:Color = Color(0xFFB8F0DE)
    override val onSecondaryContainerLight:Color = Color(0xFF1A5245)
    override val tertiaryLight:Color = Color(0xFF55579D)
    override val onTertiaryLight:Color = Color(0xFFFFFFFF)
    override val tertiaryContainerLight:Color = Color(0xFFBABCFF)
    override val onTertiaryContainerLight:Color = Color(0xFF292A6E)
    override val errorLight:Color = Color(0xFFBA1A1A)
    override val onErrorLight:Color = Color(0xFFFFFFFF)
    override val errorContainerLight:Color = Color(0xFFFFDAD6)
    override val onErrorContainerLight:Color = Color(0xFF410002)
    override val backgroundLight:Color = Color(0xFFF3FBF7)
    override val onBackgroundLight:Color = Color(0xFF161D1B)
    override val surfaceLight:Color = Color(0xFFF3FBF7)
    override val onSurfaceLight:Color = Color(0xFF161D1B)
    override val surfaceVariantLight:Color = Color(0xFFD6E6DF)
    override val onSurfaceVariantLight:Color = Color(0xFF3B4A45)
    override val outlineLight:Color = Color(0xFF6B7A75)
    override val outlineVariantLight:Color = Color(0xFFBACAC3)
    override val scrimLight:Color = Color(0xFF000000)
    override val inverseSurfaceLight:Color = Color(0xFF2A322F)
    override val inverseOnSurfaceLight:Color = Color(0xFFEBF3EE)
    override val inversePrimaryLight:Color = Color(0xFF2EDFBB)
    override val surfaceDimLight:Color = Color(0xFFD4DCD7)
    override val surfaceBrightLight:Color = Color(0xFFF3FBF7)
    override val surfaceContainerLowestLight:Color = Color(0xFFFFFFFF)
    override val surfaceContainerLowLight:Color = Color(0xFFEDF5F1)
    override val surfaceContainerLight:Color = Color(0xFFE8F0EB)
    override val surfaceContainerHighLight:Color = Color(0xFFE2EAE5)
    override val surfaceContainerHighestLight:Color = Color(0xFFDCE4E0)

    override val primaryDark:Color = Color(0xFF4EF3CE)
    override val onPrimaryDark:Color = Color(0xFF00382D)
    override val primaryContainerDark:Color = Color(0xFF00C8A6)
    override val onPrimaryContainerDark:Color = Color(0xFF002C23)
    override val secondaryDark:Color = Color(0xFF9AD2C0)
    override val onSecondaryDark:Color = Color(0xFF00382D)
    override val secondaryContainerDark:Color = Color(0xFF0C483B)
    override val onSecondaryContainerDark:Color = Color(0xFFA8E0CE)
    override val tertiaryDark:Color = Color(0xFFDAD9FF)
    override val onTertiaryDark:Color = Color(0xFF26286C)
    override val tertiaryContainerDark:Color = Color(0xFFAAACF9)
    override val onTertiaryContainerDark:Color = Color(0xFF1C1E62)
    override val errorDark:Color = Color(0xFFFFB4AB)
    override val onErrorDark:Color = Color(0xFF690005)
    override val errorContainerDark:Color = Color(0xFF93000A)
    override val onErrorContainerDark:Color = Color(0xFFFFDAD6)
    override val backgroundDark:Color = Color(0xFF0D1512)
    override val onBackgroundDark:Color = Color(0xFFDCE4E0)
    override val surfaceDark:Color = Color(0xFF0D1512)
    override val onSurfaceDark:Color = Color(0xFFDCE4E0)
    override val surfaceVariantDark:Color = Color(0xFF3B4A45)
    override val onSurfaceVariantDark:Color = Color(0xFFBACAC3)
    override val outlineDark:Color = Color(0xFF85948E)
    override val outlineVariantDark:Color = Color(0xFF3B4A45)
    override val scrimDark:Color = Color(0xFF000000)
    override val inverseSurfaceDark:Color = Color(0xFFDCE4E0)
    override val inverseOnSurfaceDark:Color = Color(0xFF2A322F)
    override val inversePrimaryDark:Color = Color(0xFF006B58)
    override val surfaceDimDark:Color = Color(0xFF0D1512)
    override val surfaceBrightDark:Color = Color(0xFF333B38)
    override val surfaceContainerLowestDark:Color = Color(0xFF08100D)
    override val surfaceContainerLowDark:Color = Color(0xFF161D1B)
    override val surfaceContainerDark:Color = Color(0xFF1A211F)
    override val surfaceContainerHighDark:Color = Color(0xFF242C29)
    override val surfaceContainerHighestDark:Color = Color(0xFF2F3633)
}